{"version":3,"sources":["components/images/reactMovie_logo.png","components/images/tmdb_logo.svg","components/images/no_image.jpg","components/styles/StyledHeader.js","components/elements/Header.js","config.js","components/styles/StyledHeroImage.js","components/elements/HeroImage.js","components/styles/StyledSearchBar.js","components/elements/SearchBar.js","components/styles/StyledGrid.js","components/elements/Grid.js","components/styles/StyledMovieThumb.js","components/elements/MovieThumb.js","components/styles/StyledLoadMoreBtn.js","components/elements/LoadMoreBtn.js","components/styles/StyledSpinner.js","components/elements/Spinner.js","components/Home.js","components/hooks/useHomeFetch.js","components/App.js","index.js"],"names":["module","exports","StyledHeader","styled","div","StyledRMDBLogo","img","StyledTMDBLogo","Header","className","src","RMDBLogo","alt","TMDBLogo","API_URL","API_KEY","SEARCH_BASE_URL","POPULAR_BASE_URL","StyledHeroImage","props","image","HeroImage","title","text","StyledSearchBar","StyledSearchBarContent","SearchBar","callback","useState","state","setState","timeOut","useRef","name","size","type","placeholder","onChange","event","value","target","clearTimeout","current","setTimeout","StyledGrid","StyledGridContent","Grid","header","children","StyledMovieThumb","MovieThumb","clickable","movieId","alot","StyledLoadMoreBtn","button","LoadMoreBtn","onClick","StyledSpinner","Spinner","Home","movies","loading","setLoading","error","setError","fetchMovies","endpoint","a","isLoadMore","search","fetch","json","result","prev","results","currentPage","page","totalPages","total_pages","console","log","useEffect","useHomeFetch","searchTerm","setSearchTerm","backdrop_path","original_title","overview","map","movie","key","id","poster_path","NoImage","movieName","searchEndpoint","popularEndpoint","GlobalStyle","createGlobalStyle","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5c6d11ee.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/reactMovie_logo.08494abf.png\";","module.exports = __webpack_public_path__ + \"static/media/tmdb_logo.30cd724b.svg\";","module.exports = __webpack_public_path__ + \"static/media/no_image.31f5bb1d.jpg\";","import styled from 'styled-components';\n\nexport const StyledHeader = styled.div`\n  background: #A2B996;\n  padding: 0 20px;\n  box-sizing: border-box;\n\n  .header-content {\n    max-width: 1280px;\n    min-height: 120px;\n    padding: 20px 0px;\n    margin: 0 auto;\n    box-sizing: border-box;\n\n    @media screen and (max-width: 500px) {\n      max-width: 1280px;\n      min-height: 0px;\n    }\n  }\n`;\n\nexport const StyledRMDBLogo = styled.img`\n  width: 250px;\n  margin-top: 20px;\n\n  @media screen and (max-width: 500px) {\n    width: 150px;\n    margin-top: 5px;\n  }\n`;\n\nexport const StyledTMDBLogo = styled.img`\n  width: 122px;\n  margin-top: 25px;\n  float: right;\n  background: #900C3F;\n  border-radius: 7px;\n\n  @media screen and (max-width: 500px) {\n    display: inline-block;\n    width: 80px;\n    margin-top: 0px;\n  }\n`;\n","import React from 'react';\n\n\nimport RMDBLogo from '../images/reactMovie_logo.png';\nimport TMDBLogo from '../images/tmdb_logo.svg';\n\nimport { StyledHeader, StyledRMDBLogo, StyledTMDBLogo } from '../styles/StyledHeader';\nconst Header = () => (\n\n<StyledHeader>\n    <div className=\"header-content\">\n        <StyledRMDBLogo src={RMDBLogo} alt=\"rmdb-logo\" />\n        <StyledTMDBLogo src={TMDBLogo} alt=\"tmdb-logo\" />\n    </div>\n</StyledHeader>\n)\n\nexport default Header;","// Configuration for TMDB\n// To se the latest configuration fetch it from https://api.themoviedb.org/3/configuration?api_key=019e8f375549e0bbd4a4191862ebc88f\n// Read more about the API here: https://developers.themoviedb.org/\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '3881e3503c996f9e06d932653ebbdbd4';\n\nconst SEARCH_BASE_URL = `${API_URL}search/movie?api_key=${API_KEY}&query=`;\nconst POPULAR_BASE_URL = `${API_URL}movie/popular?api_key=${API_KEY}`;\n\nconst IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/';\n// Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w500';\n\nexport { \n    SEARCH_BASE_URL, \n    POPULAR_BASE_URL, \n    API_URL, API_KEY, \n    IMAGE_BASE_URL, \n    BACKDROP_SIZE, \n    POSTER_SIZE };\n","import styled from 'styled-components';\n\nexport const StyledHeroImage = styled.div`\n  background: ${props =>\n    `linear-gradient(\n      to bottom, rgba(0,0,0,0)\n      39%,rgba(0,0,0,0)\n      41%,rgba(0,0,0,0.65)\n      100%\n    ),\n    url('${props.image}'), #1c1c1c`};\n  background-size: cover;\n  background-position: center, center;\n  width: 100%;\n  height: 600px;\n  position: relative;\n  animation: animateHeroImage 1s;\n\n  .HeroImage-content {\n    max-width: 1280px;\n    padding: 20px;\n    margin: 0 auto;\n  }\n\n  .HeroImage-text {\n    z-index: 100;\n    max-width: 700px;\n    position: absolute;\n    bottom: 40px;\n    margin-right: 20px;\n    min-height: 100px;\n    background: rgba(0, 0, 0, 0);\n    color: #fff;\n\n    h1 {\n      font-family: 'Abel', sans-serif;\n      font-size: 48px;\n      color: #fff;\n\n      @media screen and (max-width: 720px) {\n        font-size: 38px;\n        color: #fff;\n      }\n    }\n\n    p {\n      font-family: 'Abel', sans-serif;\n      font-size: 22px;\n      line-height: 26px;\n      color: #fff;\n\n      @media screen and (max-width: 720px) {\n        font-size: 16px;\n        line-height: 20px;\n        color: #fff;\n      }\n    }\n\n    @media screen and (max-width: 720px) {\n      max-width: 100%;\n    }\n  }\n\n  @keyframes animateHeroImage {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n","import React from 'react';\nimport { StyledHeroImage } from '../styles/StyledHeroImage';\n\n\nconst HeroImage = ({ image, title, text }) => (\n    <StyledHeroImage image={image}>\n        <div className=\"HeroImage-content\">\n            <div className=\"HeroImage-text\">\n                <h1>{title}</h1>\n                <p>{text}</p>\n            </div>\n        </div>\n    </StyledHeroImage>\n)\n\nexport default HeroImage;","import styled from 'styled-components';\n\nexport const StyledSearchBar = styled.div`\n  width: 100%;\n  height: 105px;\n  background: #B95330;\n  padding: 25px 20px 0px 20px;\n  box-sizing: border-box;\n  color: #fff;\n`;\n\nexport const StyledSearchBarContent = styled.div`\n  max-width: 1280px;\n  width: 100%;\n  height: 55px;\n  background: #EADBD5;\n  margin: 0 auto;\n  border-radius: 40px;\n  position: relative;\n  color: #fff;\n\n  .fa-search {\n    position: absolute;\n    left: 20px;\n    top: 12px;\n    color: #fff;\n    z-index: 1000;\n  }\n\n  input {\n    font-family: 'Abel', sans-serif;\n    font-size: 28px;\n    position: absolute;\n    left: 0px;\n    margin: 8px 0;\n    padding: 0 0 0 60px;\n    border: 0;\n    width: 95%;\n    background: transparent;\n    height: 40px;\n    color: #fff;\n    box-sizing: border-box;\n\n    :focus {\n      outline: none;\n    }\n\n    @media screen and (max-width: 720px) {\n      font-size: 28px;\n    }\n  }\n`;\n","import React, { useState, useRef } from 'react';\nimport FontAwesome from 'react-fontawesome';\n\nimport {StyledSearchBar, StyledSearchBarContent}\nfrom '../styles/StyledSearchBar';\n\nconst SearchBar = ({ callback }) => {\n    const [state, setState] = useState('');\n    const timeOut = useRef(null);\n\n    //this is going to be a CONTROLLED COMPONENT\n//state (determined by user) {doSearch} will update the state\n//the input field will then get its value from the state\n//state value and input value will always be in sync\n     const doSearch = event => {\n         const { value } = event.target;\n         setState(value);\n\n         //if you have a value you want to mutate and you want to keep between renders you use a ref\n        clearTimeout(timeOut.current);\n        setState(value);\n\n        timeOut.current = setTimeout(() =>{\n        callback(value);\n        }, 500); \n    }\n        //when the user types in the search bar, it will wait .5s before it calls the API\n\n\nreturn (\n    <StyledSearchBar>\n        <StyledSearchBarContent>\n        <FontAwesome className=\"fa-search\" name=\"search\" size=\"2x\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search Movie\"\n          onChange={doSearch}\n          value={state}\n          />\n    </StyledSearchBarContent>\n    </StyledSearchBar>\n)\n}\n\nexport default SearchBar;","import styled from 'styled-components';\n\nexport const StyledGrid = styled.div`\n  max-width: 1280px;\n  margin: 0 auto;\n  padding: 0 20px;\n  h1 {\n    font-family: 'Abel', sans-serif;\n    font-size: 42px;\n\n    @media screen and (max-width: 768px) {\n      font-size: 22px;\n    }\n  }\n`;\n\nexport const StyledGridContent = styled.div`\n  display: grid;\n  grid-template-columns: repeat(5, minmax(100px, 1fr));\n  grid-gap: 40px;\n  position: relative;\n\n  .grid-element {\n    animation: animateGrid 0.5s;\n  }\n\n  @keyframes animateGrid {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n\n  @media screen and (max-width: 1024px) {\n    grid-template-columns: repeat(4, minmax(100px, 1fr));\n  }\n\n  @media screen and (max-width: 768px) {\n    grid-template-columns: repeat(3, minmax(100px, 1fr));\n  }\n\n  @media screen and (max-width: 600px) {\n    grid-template-columns: repeat(2, minmax(100px, 1fr));\n  }\n\n  @media screen and (max-width: 375px) {\n    grid-template-columns: repeat(1, 1fr);\n  }\n`;\n","import React from 'react';\nimport { StyledGrid, StyledGridContent } from '../styles/StyledGrid'\n\nconst Grid = ({header, children}) => (\n  <StyledGrid>\n    <h1>{header}</h1>\n      <StyledGridContent>{children}</StyledGridContent>\n  </StyledGrid>\n)\n\nexport default Grid;","import styled from 'styled-components';\n\nexport const StyledMovieThumb = styled.div`\n  img {\n    width: 100%;\n    height: auto;\n    transition: 0.4s;\n    object-fit: cover;\n    border-radius: 15px;\n\n\n    :hover {\n      filter: drop-shadow(15px 5px 4px #FFC300);\n      cursor: pointer;\n     \n    }\n  }\n`;\n","import React from 'react';\nimport { StyledMovieThumb } from '../styles/StyledMovieThumb'\n\n\nconst MovieThumb = ({ image, movieId, clickable }) => ( \n  <StyledMovieThumb> \n      {clickable ? (\n        <img className=\"clickable\" src={image} alt=\"moviethumb\" />\n        ) : (\n          <img src={image} alot=\"moviethumb\" />  \n        )}\n  </StyledMovieThumb>\n//if 'clickable is true, run this\n\n)\n\nexport default MovieThumb;","import styled from 'styled-components';\n\nexport const StyledLoadMoreBtn = styled.button`\n  background: #000;\n  width: 25%;\n  min-width: 200px;\n  height: 70px;\n  color: #fff;\n  cursor: pointer;\n  transition: all 0.3s;\n  border-radius: 40px;\n  font-family: 'Abel', sans-serif;\n  font-size: 28px;\n  max-width: 1280px;\n  display: block;\n  margin: 20px auto;\n  padding: 0 20px;\n  outline: none;\n\n  :hover {\n    opacity: 0.8;\n  }\n`;\n","import React from 'react';\n\nimport { StyledLoadMoreBtn } from '../styles/StyledLoadMoreBtn'\nconst LoadMoreBtn = ({ text, callback }) => (\n     <StyledLoadMoreBtn type=\"button\" onClick={callback}>\n         {text}\n     </StyledLoadMoreBtn>\n )\n\nexport default LoadMoreBtn;","import styled from 'styled-components';\n\nexport const StyledSpinner = styled.div`\nborder-top: 5px solid #C7B418;\nborder-radius: 50%;\nwidth: 50px;\nheight: 50px;\nfilter: drop-shadow(1px 4px 3px #729372);\nanimation: spin 0.8s linear infinite;\nmargin: 20px auto;\n\n\n@keyframes spin {\n    0% {\n        transformL rotate(0deg);\n    }\n    100% {\n        transform: rotate(360deg);\n    }\n}\n\n\n`","import React from 'react';\nimport { StyledSpinner } from '../styles/StyledSpinner';\n\nconst Spinner = () => <StyledSpinner />\n\nexport default Spinner;","import React, { useState } from 'react';\nimport { \nPOPULAR_BASE_URL,  \nPOSTER_SIZE,\nBACKDROP_SIZE,\nIMAGE_BASE_URL,\nSEARCH_BASE_URL\n} from '../config';\n\n\nimport HeroImage from './elements/HeroImage'\nimport SearchBar from './elements/SearchBar'\nimport Grid from './elements/Grid'\nimport MovieThumb from './elements/MovieThumb'\nimport LoadMoreBtn from './elements/LoadMoreBtn'\nimport Spinner from './elements/Spinner';\n\n//Custom hook\nimport { useHomeFetch } from './hooks/useHomeFetch';\n\n//this is our fall back for when no image is provided by the API\nimport NoImage from './images/no_image.jpg';\n;\n\n\n//When trying to de-structure state below, everything blows up...\nconst Home = () => {\n  const [{ state, loading, error }, fetchMovies] = useHomeFetch();\n  const [searchTerm, setSearchTerm] = useState('');\n  //this empty string for useState is going to be used to check if we are in a search or not\n console.log(state);\n\n const searchMovies = search => {\n  const endpoint = search ? SEARCH_BASE_URL + search : POPULAR_BASE_URL;\n  \n  setSearchTerm(search);\n  fetchMovies(endpoint);\n  \n}  \n\n  const loadMoreMovies = () => {\n    const searchEndpoint = `${SEARCH_BASE_URL}${searchTerm}&page=${state.currentPage + 1}`;\n    const popularEndpoint = `${POPULAR_BASE_URL}&page=${state.currentPage + 1}`;\n    \n    const endpoint = searchTerm ? searchEndpoint : popularEndpoint;\n    \n    fetchMovies(endpoint)\n  }\n\n  if (error) return <div>What did you do???</div>\n  if (!state.movies[0]) return <Spinner />\n\nreturn ( // the !searchTerm && short circuit will get rid of \"HeroImage\" when search results are loaded\n    <>\n    {!searchTerm && (\n    <HeroImage \n      image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${state.HeroImage.backdrop_path}`}\n      title={state.HeroImage.original_title}\n      text={state.HeroImage.overview}\n  \n      /> )}\n    <SearchBar callback={searchMovies}/>\n    <Grid header={searchTerm ? 'Search Result' : 'Popular Movies'}>\n     {state.movies.map(movie => (\n       <MovieThumb\n       key={movie.id} \n       clickable\n       image={\n         movie.poster_path \n          ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\n          : NoImage //Image movie poster_path structure provided by The Movie Database API, DON'T MESS WITH IT!\n      }\n        movieId={movie.id}\n        movieName={movie.original_title}\n        >\n          \n        </MovieThumb>\n     ))} \n    </Grid> \n    {loading && <Spinner />} \n    <LoadMoreBtn text=\"Load More\" callback={loadMoreMovies}/>\n    </>\n    ) // loading && above is a short circuit to run spinner if \n}\n\n\n\nexport default Home;","import { useState, useEffect } from 'react';\nimport { POPULAR_BASE_URL } from '../../config';\n\n\nexport const useHomeFetch = () => {\n  const [state, setState] = useState({ movies: [] });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);  \n\n  // console.log(state);\n\n  //this async will allow the code to wait until it pulls data from the api before continuing\n  const fetchMovies = async endpoint => {\n    setError(false);\n    setLoading(true);\n\n    const isLoadMore = endpoint.search('page');\n\n    //this try block executes first, awaits data from the endpoint, awaits the .json parse, then continues\n    //the catch block will run if the try doesn't work\n    try {\n      const result = await (await fetch(endpoint)).json();\n     \n      //this 'spread previous state should give you the value of the previous state as the parameter\n      setState(prev => ({\n          ...prev,\n          movies: \n            isLoadMore !== -1 \n            ? [...prev.movies,   ...result.results]\n            : [...result.results],\n          HeroImage: prev.HeroImage || result.results[0], //this '||' short circuit will check if we have HeroImage in state, and if so, it does nothing.index 0 is the most popular movie\n          currentPage: result.page,\n          totalPages: result.total_pages,    //the naming convention for total_pages come straight from TMDB API,          \n      }));\n\n    } catch (error) {\n      setError(true);\n      console.log(error);\n    }\n    setLoading(false);\n}\n// useEffect is native to React hooks, this is our trigger for fetching data from the API\n  useEffect(() => {\n      fetchMovies(POPULAR_BASE_URL);\n  }, [])\n//  ˆˆˆˆ empty dependency array keeps this from running ad nausea\n\n  return [{ state, loading, error }, fetchMovies];\n}\n\n","import React from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport Header from './elements/Header';\nimport Home from './Home';\n\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n      margin: 0;\n      padding: 0;\n      box-sizing: border-box;\n      background: #A2B996;\n  }\n`\nconst App = () => (\n<>\n    <Header />\n    <Home />\n    <GlobalStyle />\n    </>\n)\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}